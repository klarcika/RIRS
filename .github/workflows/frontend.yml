# Ime pipeline-a za frontend
name: Frontend CI

# Dogodki, ki sprožijo workflow (push in pull request na glavno vejo)
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Ime job-a za testiranje frontenda
  test-frontend:
    runs-on: ubuntu-latest  # Okolje, v katerem bo job tekel

    steps:
      - name: Checkout code  # Kloniranje repozitorija
        uses: actions/checkout@v3

      - name: Setup Node.js  # Namestitev Node.js okolja
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies  # Namestitev odvisnosti
        run: |
          cd frontend
          npm install

      - name: Run tests with coverage  # Izvajanje testov s pokritostjo
        run: |
          cd frontend
          npm run test:ci

      - name: Upload coverage report  # Naložitev poročila o pokritosti
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage
          path: frontend/coverage/

  # Gradnja Docker slike in nalaganje na Docker Hub - Development
  dockerize-and-push-dev:
    needs: test-frontend
    runs-on: ubuntu-latest
    environment: Development
    if: github.ref == 'refs/heads/main'
    env:
      DOCKER_USERNAME: ${{ secrets.RIRS_DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.RIRS_DOCKER_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }}
      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/frontend:dev ./frontend
          docker tag ${{ env.DOCKER_USERNAME }}/frontend:dev ${{ env.DOCKER_USERNAME }}/frontend:${{ github.sha }}
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/frontend:dev
          docker push ${{ env.DOCKER_USERNAME }}/frontend:${{ github.sha }}

  # Gradnja Docker slike in nalaganje na Docker Hub - Production
  dockerize-and-push-prod:
    needs: test-frontend
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/production'
    environment:
      name: Production
    env:
      DOCKER_USERNAME: ${{ secrets.RIRS_DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.RIRS_DOCKER_TOKEN }}
      SONAR_TOKEN: ${{ secrets.RIRS_SONAR_TOKEN }}
      PROJECT_KEY: ${{ secrets.RIRS_PROJECT_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Check SonarCloud Quality Gate
        run: |
          curl -u ${{ env.SONAR_TOKEN }}: \
            "https://sonarcloud.io/api/project_badges/measure?project=${{ env.PROJECT_KEY }}&metric=alert_status" | grep -q "OK" || exit 1
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }}
      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/frontend:prod ./frontend
          docker tag ${{ env.DOCKER_USERNAME }}/frontend:prod ${{ env.DOCKER_USERNAME }}/frontend:${{ github.sha }}
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/frontend:prod
          docker push ${{ env.DOCKER_USERNAME }}/frontend:${{ github.sha }}
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel_token: ${{ secrets.VERCEL_TOKEN }}
          vercel_org_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel_team_id: ${{ secrets.VERCEL_TEAM_ID }}
